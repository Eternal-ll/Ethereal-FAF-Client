<UserControl x:Class="beta.Views.CustomGamesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:beta.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:customI="clr-namespace:beta.Infrastructure.Behaviors"
             xmlns:vm="clr-namespace:beta.ViewModels"
             d:DataContext="{d:DesignInstance {x:Type vm:CustomGamesViewModel}}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <vm:CustomGamesViewModel/>
    </UserControl.DataContext>
    <Grid ShowGridLines="False">
        <Grid.Resources>
            <Style x:Key="g" TargetType="ListBox" BasedOn="{StaticResource DefaultListBoxStyle}">
                <Setter Property="Margin" Value="0 100 0 0"/>
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding title, StringFormat='title: {0}'}"/>
                                <TextBlock Text="{Binding uid, StringFormat='uid: {0}'}"/>
                                <TextBlock Text="{Binding State, StringFormat='State: {0}'}"/>
                                <TextBlock Text="{Binding GameType, StringFormat='GameType: {0}'}"/>
                                <TextBlock Text="{Binding FeaturedMod, StringFormat='FeaturedMod: {0}'}"/>
                                <TextBlock Text="{Binding mapname, StringFormat='mapname: {0}'}"/>
                                <TextBlock Text="{Binding sim_mods.Count, StringFormat='sim_mods: {0}'}"/>
                                <ItemsControl ItemsSource="{Binding teams}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel>
                                                <TextBlock Text="{Binding Key, StringFormat='Team {0}'}"/>
                                                <ItemsControl ItemsSource="{Binding Value}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding}" Margin="4 0 0 0"/>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="UniformGrid">
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=ActualWidth}"/>
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
                <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            </Style>

            <Style x:Key="CustomGamesListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource DefaultListBoxStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDataGridView}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsGridView}" Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <UniformGrid VerticalAlignment="Top">
                                        <i:Interaction.Behaviors>
                                            <customI:CalculateColumns/>
                                        </i:Interaction.Behaviors>
                                        <!--<UniformGrid.Style>
                                            <Style TargetType="UniformGrid">
                                                --><!--<Setter Property="Columns" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=IdleGamesColumns}"/>-->
                                                <!--<Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsListView}" Value="True">
                                                        <Setter Property="Columns" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>--><!--
                                            </Style>
                                        </UniformGrid.Style>-->
                                    </UniformGrid>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="CustomGamesDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
                <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDataGridView}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ListBoxItem" BasedOn="{StaticResource DefaultListBoxItemStyle}">
                <!--<Setter Property="MinWidth" Value="300"/>-->
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Background" Value="{DynamicResource NavigationViewDefaultPaneBackground}"/>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}},
                                Path=DataContext.IsExtendedViewEnabled}" Value="False">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="IsSelected" Value="False"/>
                    </DataTrigger>
                </Style.Triggers>
                <Style.Resources>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </Style.Resources>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>    
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="1">
            <ListBox ItemsSource="{Binding GamesView}" SelectedValue="{Binding SelectedGame}" Style="{StaticResource CustomGamesListBoxStyle}"/>
            <!--<DataGrid ItemsSource="{Binding GamesView}" SelectedValue="{Binding SelectedGame}" Style="{StaticResource CustomGamesDataGridStyle}"
                      SelectionMode="Single" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Map" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding Map}" Height="50" Width="50" ToolTip="{Binding mapname}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Host" Binding="{Binding host}" MaxWidth="200"/>
                    <DataGridCheckBoxColumn Binding="{Binding password_protected, Mode=OneWay}"/>
                </DataGrid.Columns>
            </DataGrid>-->
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsExtendedViewEnabled}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ContentControl Content="{Binding SelectedGame}"/>
        </Grid>
        
        <WrapPanel Orientation="Vertical" VerticalAlignment="Top" Grid.ColumnSpan="2">
            <WrapPanel Margin="10 10 10 0">
                <TextBlock Text="{Binding GamesView.Count, StringFormat='Open: {0}'}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLiveGamesOnView}" Value="True">
                                    <Setter Property="Text" Value="{Binding GamesView.Count, StringFormat='Live: {0}'}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock Text="{Binding Games.Count, StringFormat='Total: {0}'}" Margin="10 0 0 0"/>
            </WrapPanel>
            <WrapPanel Margin="10">
                <CheckBox IsChecked="{Binding IsLiveGamesOnView}" Content="Show live games "/>
                <CheckBox IsChecked="{Binding IsOnlyFriendsGamesVisible}" Content="IsOnlyFriendsGamesVisible "/>
                <CheckBox IsChecked="{Binding IsFoesGamesHidden}" Content="IsFoesGamesHidden "/>
                <CheckBox IsChecked="{Binding IsDataGridView}" Content="IsDataGridView "/>
                <CheckBox IsChecked="{Binding IsGridView}" Content="IsGridView "/>
                <CheckBox IsChecked="{Binding IsExtendedViewEnabled}" Content="IsExtendedViewEnabled "/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Filter" VerticalAlignment="Center" Margin="10 0"/>
                    <TextBox Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="by" VerticalAlignment="Center" Margin="10 0"/>
                    <ComboBox SelectedValue="{Binding SelectedFilterDescription}" ItemsSource="{Binding FilterDescriptions}"
                              DisplayMemberPath="DisplayedProperty"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                </StackPanel>
            </WrapPanel>
        </WrapPanel>
    </Grid>
</UserControl>
