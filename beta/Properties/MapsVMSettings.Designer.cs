//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace beta.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.0.3.0")]
    internal sealed partial class MapsVMSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static MapsVMSettings defaultInstance = ((MapsVMSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new MapsVMSettings())));
        
        public static MapsVMSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsMapTitleEnabled {
            get {
                return ((bool)(this["IsMapTitleEnabled"]));
            }
            set {
                this["IsMapTitleEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsMapInteractiveButtonsEnabled {
            get {
                return ((bool)(this["IsMapInteractiveButtonsEnabled"]));
            }
            set {
                this["IsMapInteractiveButtonsEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsDescriptionEnabled {
            get {
                return ((bool)(this["IsDescriptionEnabled"]));
            }
            set {
                this["IsDescriptionEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsMapLabelsEnabled {
            get {
                return ((bool)(this["IsMapLabelsEnabled"]));
            }
            set {
                this["IsMapLabelsEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsMapSummaryEnabled {
            get {
                return ((bool)(this["IsMapSummaryEnabled"]));
            }
            set {
                this["IsMapSummaryEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsMapDataEnabled {
            get {
                return ((bool)(this["IsMapDataEnabled"]));
            }
            set {
                this["IsMapDataEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0.5")]
        public double MapDescriptionOpacity {
            get {
                return ((double)(this["MapDescriptionOpacity"]));
            }
            set {
                this["MapDescriptionOpacity"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsPaginationEnabled {
            get {
                return ((bool)(this["IsPaginationEnabled"]));
            }
            set {
                this["IsPaginationEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsQueryEnabled {
            get {
                return ((bool)(this["IsQueryEnabled"]));
            }
            set {
                this["IsQueryEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsInfinityScrollEnabled {
            get {
                return ((bool)(this["IsInfinityScrollEnabled"]));
            }
            set {
                this["IsInfinityScrollEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsHiddenMapsDisabled {
            get {
                return ((bool)(this["IsHiddenMapsDisabled"]));
            }
            set {
                this["IsHiddenMapsDisabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsOnlyRanked {
            get {
                return ((bool)(this["IsOnlyRanked"]));
            }
            set {
                this["IsOnlyRanked"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsOnlyRecommended {
            get {
                return ((bool)(this["IsOnlyRecommended"]));
            }
            set {
                this["IsOnlyRecommended"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsOnlyLocalMaps {
            get {
                return ((bool)(this["IsOnlyLocalMaps"]));
            }
            set {
                this["IsOnlyLocalMaps"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool IsSortEnabled {
            get {
                return ((bool)(this["IsSortEnabled"]));
            }
            set {
                this["IsSortEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool IsGridViewEnabled {
            get {
                return ((bool)(this["IsGridViewEnabled"]));
            }
            set {
                this["IsGridViewEnabled"] = value;
            }
        }
    }
}
