<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:lobby="clr-namespace:Ethereal.FAF.UI.Client.Models.Lobby"
    xmlns:vm="clr-namespace:Ethereal.FAF.UI.Client.ViewModels"
    xmlns:converters="clr-namespace:Ethereal.FAF.UI.Client.Infrastructure.Converters"
    xmlns:lobbyDomain="clr-namespace:FAF.Domain.LobbyServer;assembly=FAF.Domain.LobbyServer"
    xmlns:databinding="clr-namespace:Ethereal.FAF.UI.Client.Infrastructure.DataTemplateSelectors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    mc:Ignorable="d" >

    <Style x:Key="Card" TargetType="Border" BasedOn="{StaticResource ClippedBorder}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="CornerRadius" Value="4"/>

    </Style>
    <Style x:Key="CardBorder" TargetType="Border" BasedOn="{StaticResource Card}">
        <Setter Property="Width" Value="340"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimModsBadge" TargetType="ui:Badge" BasedOn="{StaticResource {x:Type ui:Badge}}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip>
                    <ItemsControl ItemsSource="{Binding SimMods}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                            <Run Text="{Binding Value, Mode=OneWay}"/>
                                            <LineBreak/>
                                            <Run Text="{Binding Key, Mode=OneWay}" FontSize="10" Foreground="Gray"/>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SimMods.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="test" DataType="{x:Type lobby:GamePlayer}">
        <StackPanel Orientation="Horizontal">
            <Image DataContext="{Binding Player.Country}"
                           Style="{StaticResource PlayerFlagBitmapImageStyle}"/>
            <Image Height="16" Width="32" Margin="4 0 0 0">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="ToolTip" Value="{Binding Player.Avatar.Tooltip}"/>
                        <Setter Property="Source" Value="{Binding Player.Avatar.Url}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Player.Avatar}" Value="{x:Null}">
                                <Setter Property="ToolTip" Value="{x:Null}"/>
                                <Setter Property="Source" Value="{x:Null}"/>
                                <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <TextBlock Text="{Binding Login}" Width="140" Margin="4 -2 0 0"/>
            <ui:SymbolIcon Margin="4 0" Width="14">
                <ui:SymbolIcon.Style>
                    <Style TargetType="ui:SymbolIcon" BasedOn="{StaticResource {x:Type ui:SymbolIcon}}">
                        <Setter Property="Filled" Value="True"/>
                        <Setter Property="Foreground" Value="Red"/>
                        <Setter Property="Symbol" Value="PlugDisconnected20"/>
                        <Style.Triggers>
                            <!--<DataTrigger Binding="{Binding Player.IsPlaying}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>-->
                            <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                <!--<Setter Property="Symbol" Value="PlugDisconnected20"/>-->
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:SymbolIcon.Style>
            </ui:SymbolIcon>
            <TextBlock Text="{Binding Rating, StringFormat='R: {0}'}" Width="48" Margin="0 -2 0 0"/>
            <TextBlock Text="{Binding Games, StringFormat='G: {0}'}" Width="48" Margin="4 -2 0 0"/>
        </StackPanel>
    </DataTemplate>
    <Style x:Key="AvatarImage" TargetType="Image">
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="ToolTip" Value="{Binding Avatar.Tooltip}"/>
        <Setter Property="Source" Value="{Binding Avatar.Url}"/>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="Copy" Command="{StaticResource CopyCommand}"
                                      CommandParameter="{Binding Avatar.Url}"/>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Avatar}" Value="{x:Null}">
                <Setter Property="ToolTip" Value="{x:Null}"/>
                <Setter Property="Source" Value="{x:Null}"/>
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate DataType="{x:Type lobbyDomain:PlayerAvatar}">
        <Image Height="14" Width="28"
                       Source="{Binding Url}"
                       ToolTip="{Binding Tooltip}"/>
    </DataTemplate>
    <DataTemplate x:Key="MatchmakingGamePlayer" DataType="{x:Type lobby:GamePlayer}">
        <Grid ShowGridLines="False" Margin="0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="2"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Grid.Column="0" Style="{StaticResource AvatarImage}" DataContext="{Binding Player}"/>
            <Image Grid.Row="2" Grid.Column="0"
                           DataContext="{Binding Player.Country}"
                           Style="{StaticResource PlayerFlagBitmapImageStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding Player.LoginWithClan}" ToolTip="{Binding Player.LoginWithClan}"/>
            <TextBlock Grid.Row="2" Grid.Column="4" FontSize="10">
                        <Run Text="{Binding Rating, StringFormat='R: {0}'}"/>
                        <Run Text="{Binding Games, StringFormat='G: {0}'}"/>
            </TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MatchmakingGamePlayerNoAvatar" DataType="{x:Type lobby:GamePlayer}">
        <Grid ShowGridLines="False" Margin="0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="2"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Grid.Column="0"
                           DataContext="{Binding Player.Country}"
                           Style="{StaticResource PlayerFlagBitmapImageStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Player.LoginWithClan}"/>
            <TextBlock Grid.Row="2" Grid.Column="2" FontSize="10">
                        <Run Text="{Binding Rating, StringFormat='R: {0}'}"/>
                        <Run Text="{Binding Games, StringFormat='G: {0}'}"/>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PlayersWithAvatar">
        <ItemsControl ItemsSource="{Binding GamePlayers}" ItemTemplate="{StaticResource MatchmakingGamePlayer}">
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Margin" Value="0 1"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate x:Key="PlayersWithoutAvatar">
        <ItemsControl ItemsSource="{Binding GamePlayers}" ItemTemplate="{StaticResource MatchmakingGamePlayerNoAvatar}">
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Margin" Value="0 1"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DataTemplate>


    <Style x:Key="DefaultMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">

    </Style>

    <!--<DataTemplate DataType="{x:Type services:ServerManager}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="20" Width="20" Source="{Binding Server.Logo}"/>
                    <TextBlock Text="{Binding Server.ShortName}" VerticalAlignment="Center" Margin="4 0 0 0" FontSize="14"/>
                </StackPanel>
            </DataTemplate>-->

    <Style x:Key="GamePlayerMenuItem" TargetType="MenuItem">
        <Setter Property="Header" Value="{Binding}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>
        <Setter Property="ItemsSource">
            <Setter.Value>
                <x:Array Type="FrameworkElement">
                    <MenuItem Header="View profile"/>
                    <Separator/>
                    <MenuItem Header="Analytics">
                        <MenuItem Header="FAF Analytics [Global + TMM]" 
                                                                              Command="{StaticResource FafAnalyticsGlobalCommand}"
                                                                              CommandParameter="{Binding Id}"
                                          ToolTip="FAF Analytics by Kazbek"/>
                        <MenuItem Header="FAF Analytics [1 vs 1]" Command="{StaticResource FafAnalyticsLadderCommand}"
                                                                              CommandParameter="{Binding Id}"/>
                        <MenuItem Header="FAF Analytics [2 vs 2]" Command="{StaticResource FafAnalyticsTMMCommand}"
                                                                              CommandParameter="{Binding Id}"/>
                        <MenuItem Header="FAF Score NL" Command="{StaticResource FafScoreCommand}"
                                                                              CommandParameter="{Binding Login}"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Add to friends"/>
                    <MenuItem Header="Add to foe"/>
                </x:Array>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MapScenarioBadge" TargetType="ui:Badge" BasedOn="{StaticResource {x:Type ui:Badge}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding MapScenario}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MapGeneratorMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Command" Value="{StaticResource GenerateGameMapCommand}"/>
        <Setter Property="Header" Value="Generate map"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMapgen}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="1">
                <Setter Property="Header">
                    <Setter.Value>
                        <StackPanel Orientation="Horizontal">
                            <ui:ProgressRing Height="12" Width="12" Margin="0 0 4 0" IsIndeterminate="True"/>
                            <TextBlock Text="Map is generating..."/>
                        </StackPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="2">
                <Setter Property="Header" Value="Map is generated"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="3">
                <Setter Property="Header">
                    <Setter.Value>
                        <StackPanel Orientation="Horizontal" TextElement.Foreground="Red">
                            <ui:SymbolIcon Symbol="ErrorCircle24" Margin="0 0 4 0" Foreground="Red"/>
                            <TextBlock Text="Faulted!" TextWrapping="Wrap"/>
                        </StackPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MapGeneratorButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Command" Value="{StaticResource GenerateGameMapCommand}"/>
        <Setter Property="Content" Value="Generate"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMapgen}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="1">
                <Setter Property="Content">
                    <Setter.Value>
                        <WrapPanel Orientation="Horizontal">
                            <ui:ProgressRing Height="12" Width="12" Margin="0 0 4 0" IsIndeterminate="True"/>
                            <TextBlock Text="Map is generating..." TextWrapping="Wrap"/>
                        </WrapPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="2">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding MapGeneratorState}" Value="3">
                <Setter Property="Content">
                    <Setter.Value>
                        <StackPanel Orientation="Horizontal" TextElement.Foreground="Red">
                            <ui:SymbolIcon Symbol="ErrorCircle24"/>
                            <TextBlock Text="Map generation faulted!"/>
                        </StackPanel>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <ContextMenu x:Key="GameContextMenu" d:DataContext="{d:DesignInstance {x:Type lobby:Game}}">
        <MenuItem Style="{StaticResource MapGeneratorMenuItem}" CommandParameter="{Binding}"/>
        <MenuItem Header="Show map preview" Command="{StaticResource OpenImageCommand}" CommandParameter="{Binding LargeMapPreview}"/>
        <MenuItem ItemsSource="{Binding Players}" Header="Players"
                          ItemContainerStyle="{StaticResource GamePlayerMenuItem}">
        </MenuItem>
    </ContextMenu>

    <databinding:GamePlayerTemplateSelector x:Key="GamePlayerTemplateSelector"
                        WithAvatar="{StaticResource MatchmakingGamePlayer}"
                        WithoutAvatar="{StaticResource MatchmakingGamePlayerNoAvatar}"/>


    <DataTemplate DataType="{x:Type vm:Player}">
        <TextBlock>
                    <InlineUIContainer BaselineAlignment="Center">
                        <ContentControl Content="{Binding Avatar}" Width="28"/>
                    </InlineUIContainer>
                    <InlineUIContainer BaselineAlignment="Center">
                        <Image DataContext="{Binding Country}"
                           Style="{StaticResource PlayerFlagBitmapImageStyle}"/>
                    </InlineUIContainer>
                    <Run Text="{Binding LoginWithClan, Mode=OneWay}"/>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="PlayerWithAvatar" DataType="{x:Type vm:Player}">
        <TextBlock>
                    <InlineUIContainer BaselineAlignment="Center">
                        <ContentControl Content="{Binding Avatar}"/>
                    </InlineUIContainer>
                    <InlineUIContainer BaselineAlignment="Center">
                        <Image DataContext="{Binding Country}"
                           Style="{StaticResource PlayerFlagBitmapImageStyle}"/>
                    </InlineUIContainer>
                    <Run Text="{Binding LoginWithClan, Mode=OneWay}"/>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="LadderGameOne" DataType="{x:Type lobby:Game}">
        <Border Style="{StaticResource CardBorder}" Width="NaN" Height="60" Margin="0" Cursor="Hand">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{DynamicResource WatchGameCommand}" CommandParameter="{Binding}"/>
            </Border.InputBindings>
            <Border.ToolTip>
                <ToolTip>
                    <TextBlock Margin="4" FontWeight="DemiBold" TextWrapping="Wrap">
                                <Run Text="{Binding State}"/>
                                <Run Text="{Binding Mapname, StringFormat='Raw: {0}'}"/>
                                <Run Text="{Binding MapScenario.Name, StringFormat='Scenario: {0}&#10;'}"/>
                                <Run>
                                    <Run.Text>
                                        <MultiBinding StringFormat="&#10;Size: {0}x{1} km">
                                            <Binding Path="MapScenario.WidthInKm" Mode="OneWay"/>
                                            <Binding Path="MapScenario.HeigthInKm" Mode="OneWay"/>
                                        </MultiBinding>
                                    </Run.Text>
                                </Run>
                    </TextBlock>
                </ToolTip>
            </Border.ToolTip>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image Source="{Binding SmallMapPreview, Mode=OneWay, Converter={StaticResource UriToImageConverter}}"
                               ToolTip="{Binding Mapname}" Width="60" Height="60" VerticalAlignment="Top" Grid.Column="1"/>
                <TextBlock/>
                <!--<ui:Badge HorizontalAlignment="Right" Margin="4 -24 4 4" Padding="4 2" FontSize="12"
                                  Appearance="Secondary">
                            <TextBlock>
                                <Run Text="•" Foreground="Red"/>
                                <Run Text="{Binding LaunchedAtTimeSpan,Mode=OneWay, StringFormat='{}{0:hh}:{0:mm}:{0:ss}'}"/>
                            </TextBlock>
                        </ui:Badge>-->
                <!--<Button Style="{StaticResource MapGeneratorButton}" Margin="0 -60 0 0" CommandParameter="{Binding}"
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="12"/>-->
                <Border Style="{StaticResource CardBorder}" Width="NaN" Padding="4" Margin="0"
                                Grid.Column="0"  VerticalAlignment="Center">
                    <Border.Background>
                        <!--<SolidColorBrush Color="#332FD0" Opacity=".2"/>-->
                        <LinearGradientBrush Opacity=".2">
                            <GradientStop Color="#332FD0" Offset=".5"/>
                            <GradientStop Color="#00000000" Offset="0"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <ItemsControl Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"
                                      ItemsSource="{Binding GameTeams[0].GamePlayers}"
                                      ItemTemplateSelector="{StaticResource GamePlayerTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="FrameworkElement">
                                <Setter Property="Margin" Value="4 1"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </Border>
                <Border Style="{StaticResource CardBorder}" Width="NaN" Padding="4" Margin="0"
                                Grid.Column="2" VerticalAlignment="Center">
                    <Border.Background>
                        <LinearGradientBrush Opacity=".2">
                            <GradientStop Color="Red" Offset=".5"/>
                            <GradientStop Color="#00000000" Offset="1"/>
                        </LinearGradientBrush>
                        <!--<SolidColorBrush Color="Red" Opacity=".2"/>-->
                    </Border.Background>
                    <ItemsControl VerticalAlignment="Center"
                                      ItemsSource="{Binding GameTeams[1].GamePlayers}"
                                      ItemTemplateSelector="{StaticResource GamePlayerTemplateSelector}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="FrameworkElement">
                                <Setter Property="Margin" Value="4 1"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="LadderGameCompact" DataType="{x:Type lobby:Game}">
        <Border Style="{StaticResource CardBorder}" Width="NaN" MinWidth="0"
                        Cursor="Hand">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{DynamicResource WatchGameCommand}" CommandParameter="{Binding}"/>
            </Border.InputBindings>
            <Border.ToolTip>
                <ToolTip>
                    <TextBlock Margin="4" FontWeight="DemiBold" TextWrapping="Wrap">
                                <Run Text="{Binding Mapname, StringFormat='Raw: {0}'}"/>
                                <Run Text="{Binding MapScenario.Name, StringFormat='Scenario: {0}&#10;'}"/>
                                <Run>
                                    <Run.Text>
                                        <MultiBinding StringFormat="&#10;Size: {0}x{1} km">
                                            <Binding Path="MapScenario.WidthInKm" Mode="OneWay"/>
                                            <Binding Path="MapScenario.HeigthInKm" Mode="OneWay"/>
                                        </MultiBinding>
                                    </Run.Text>
                                </Run>
                                <Run Text="&#10;&#10;•" Foreground="Red"/>
                                <Run Text="{Binding LaunchedAtTimeSpan,Mode=OneWay, StringFormat='{}{0:hh}:{0:mm}:{0:ss}'}"/>
                    </TextBlock>
                </ToolTip>
            </Border.ToolTip>
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding SmallMapPreview, Mode=OneWay, Converter={StaticResource CacheImageConverter}}"
                               ToolTip="{Binding Mapname}" Width="50" Height="50" VerticalAlignment="Top"/>
                <Button Style="{StaticResource MapGeneratorButton}" Margin="-46 0 0 0" CommandParameter="{Binding}" FontSize="12"/>
                <ItemsControl ItemsSource="{Binding GameTeams}" Margin="10 4">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplateSelector>
                        <databinding:MatchmakingGameTeamTemplateSelector
                                                WithAvatarImage="{StaticResource PlayersWithAvatar}"
                                                WithoutAvatarImage="{StaticResource PlayersWithoutAvatar}"/>
                    </ItemsControl.ItemTemplateSelector>
                </ItemsControl>

            </StackPanel>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="MatchmakingGame" DataType="{x:Type lobby:Game}">
        <Border Style="{StaticResource CardBorder}" MinWidth="400" Width="NaN" MaxWidth="1000">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{DynamicResource WatchGameCommand}" CommandParameter="{Binding}"/>
            </Border.InputBindings>
            <Border.ToolTip>
                <ToolTip>
                    <TextBlock>
                                <Run Text="{Binding AfterCreationTimeSpan, StringFormat='Created {0:ss} seconds ago', Mode=OneWay}"/>
                                <LineBreak/>
                                <Run Text="{Binding State}"/>
                    </TextBlock>
                </ToolTip>
            </Border.ToolTip>
            <Grid ShowGridLines="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="128"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Image Source="{Binding SmallMapPreview, Mode=OneWay, Converter={StaticResource UriToImageConverter}}"
                               ToolTip="{Binding Mapname}" Width="128" Height="128" VerticalAlignment="Top"/>
                <ui:Badge VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                  Padding="4 2" FontSize="12" Appearance="Secondary">
                    <TextBlock>
                                <Run Text="•" Foreground="Red"/>
                                <Run Text="{Binding LaunchedAtTimeSpan,Mode=OneWay, StringFormat='{}{0:hh}:{0:mm}:{0:ss}'}"/>
                    </TextBlock>
                </ui:Badge>
                <Button Style="{StaticResource MapGeneratorButton}" CommandParameter="{Binding}"
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="12"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Grid.RowSpan="2" Margin="4 4 0 0" FontWeight="DemiBold" TextWrapping="Wrap"
                                   ToolTip="{Binding MapScenario.Name}">
                            <Run Text="{Binding MapScenario.Name}"/>
                            <Run>
                                <Run.Text>
                                    <MultiBinding StringFormat="{}{0}x{1} km">
                                        <Binding Path="MapScenario.WidthInKm" Mode="OneWay"/>
                                        <Binding Path="MapScenario.HeigthInKm" Mode="OneWay"/>
                                    </MultiBinding>
                                </Run.Text>
                            </Run>
                </TextBlock>
                <ItemsControl Grid.Column="2" Grid.RowSpan="2" ItemsSource="{Binding GameTeams}"
                                      Margin="0 4 0 0" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="FrameworkElement">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Id}" Value="3">
                                    <Setter Property="Grid.Column" Value="2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding GamePlayers}" ItemTemplateSelector="{StaticResource GamePlayerTemplateSelector}">
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="FrameworkElement">
                                        <Setter Property="Margin" Value="0 1"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                            </ItemsControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="Loader">
        <ProgressBar IsIndeterminate="True"/>
    </DataTemplate>
    <DataTemplate x:Key="ImageDataTemplate">
        <Image Source="{Binding AsyncValue, Converter={StaticResource UriToImageConverter}}" 
                      Width="60" Height="60"/>
    </DataTemplate>
    <Style x:Key="ContentControlImageLoader" TargetType="ContentControl">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Loading}" Value="True">
                <!--<Setter Property="ContentTemplate" Value="{StaticResource Loader}"/>-->
            </DataTrigger>
            <DataTrigger Binding="{Binding Loading}" Value="False">
                <Setter Property="Content" Value="{Binding }"/>
                <Setter Property="ContentTemplate" Value="{StaticResource ImageDataTemplate}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="Test" DataType="{x:Type converters:AsyncTaskTwo}">
        <ContentControl Style="{StaticResource ContentControlImageLoader}"/>
    </DataTemplate>

    <ToolTip x:Key="SimModsTooltip" d:DataContext="{x:Type lobby:SimModReadOnlyCollection}">
        <StackPanel>
            <TextBlock Text="Enabled SIM mods:" Style="{StaticResource DescriptionHeaderTextBlock}"/>
            <ItemsControl ItemsSource="{Binding}"
                           DisplayMemberPath="Name"/>
        </StackPanel>
    </ToolTip>

    <DataTemplate DataType="{x:Type lobby:SimModReadOnlyCollection}">
        <ui:Badge Padding="4 1 4 2" Appearance="Secondary" Margin="4 0 0 0">
            <TextBlock Text="Mods"
                       FontSize="12"
                       Style="{StaticResource DescriptionHeaderTextBlock}"
                       ToolTip="{StaticResource SimModsTooltip}">
            </TextBlock>
        </ui:Badge>
        <!--<Grid Margin="2 0 0 0">
            <ToggleButton x:Name="FlyoutToggleButton" Padding="4 1 4 2">
                <TextBlock Text="Mods" FontSize="12"/>
            </ToggleButton>
            <ui:Flyout IsOpen="{Binding ElementName=FlyoutToggleButton, Path=IsChecked}">
            </ui:Flyout>
        </Grid>-->
    </DataTemplate>

    <DataTemplate x:Key="AlternativeCard" DataType="{x:Type lobby:Game}">
        <Grid ShowGridLines="False" Background="Transparent">
            <Grid.InputBindings>
                <MouseBinding
                            MouseAction="LeftDoubleClick"
                            Command="{Binding Source={StaticResource GameManager}, Path=JoinGameCommand}"
                            CommandParameter="{Binding}"/>
            </Grid.InputBindings>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ContentControl
                        Content="{Binding SmallMapPreview, Converter={StaticResource CacheImageConverter}}"
                        Width="60" Height="60"
                        ContentTemplate="{StaticResource Test}"/>
            <TextBlock Grid.Column="2" ToolTip="{Binding Title}" VerticalAlignment="Top">
                        <Run Text="{Binding Title, Converter={StaticResource TruncateStringConverter}, ConverterParameter=40}"/>
                        <LineBreak/>
                        <Run Text="{Binding Map.Name}"
                             Style="{StaticResource DescriptionHeaderRun}"
                             ToolTip="{Binding Map.RawName}">
                            <Run.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Copy map name"
                                              Command="{StaticResource CopyCommand}"
                                              CommandParameter="{Binding Map.RawName}"/>
                                </ContextMenu>
                            </Run.ContextMenu>
                        </Run>
            </TextBlock>
            <WrapPanel Grid.Column="8" Orientation="Horizontal" VerticalAlignment="Center">
                <ui:Badge Padding="4 1 4 2" Appearance="Secondary"
                          ToolTip="Featured mod">
                    <TextBlock Text="{Binding FeaturedMod}" FontSize="12"
                               Style="{StaticResource DescriptionHeaderTextBlock}"/>
                </ui:Badge>
                <ContentControl Content="{Binding SimMods}"/>
                <ui:Badge Padding="4 1 4 2" Appearance="Secondary" ToolTip="Lobby secured with password"
                          Margin="2 0 0 0"
                          Visibility="{Binding PasswordProtected, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Text="Secured"
                               FontSize="12"
                               Style="{StaticResource DescriptionHeaderTextBlock}"/>
                </ui:Badge>
            </WrapPanel>
            <TextBlock Grid.Column="4" VerticalAlignment="Center">
                        <!--<Run Text="Host" Style="{StaticResource DescriptionHeaderRun}"/>-->
                        <!--<LineBreak/>-->
                        <InlineUIContainer>
                            <ContentControl Grid.Column="4" VerticalAlignment="Center">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Setter Property="Content" Value="{Binding HostPlayer}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HostPlayer}" Value="{x:Null}">
                                                <Setter Property="Content" Value="{Binding Host}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                        </InlineUIContainer>
            </TextBlock>
            <TextBlock Grid.Column="6"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               ToolTip="Players">
                        <!--<Run Text="Players"/>-->
                        <!--<LineBreak/>-->
                        <Run>
                            <Run.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="NumPlayers"/>
                                    <Binding Path="MaxPlayers"/>
                                </MultiBinding>
                            </Run.Text>
                        </Run>
            </TextBlock>
            <!--<TextBlock Grid.Column="8" Style="{StaticResource DescriptionHeaderTextBlock}"
                               VerticalAlignment="Center">
                        <Run Text="Featured mod"/>
                        <LineBreak/>
                        <Run Text="{Binding FeaturedMod}"/>
                    </TextBlock>-->
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="AlternativeCard2" DataType="{x:Type lobby:Game}">
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="-3" ContextMenu="{StaticResource GameContextMenu}">
                <StackPanel.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{DynamicResource JoinGameCommand}" CommandParameter="{Binding}"/>
                </StackPanel.InputBindings>
                <!--<ContentControl Width="60" Height="60" Content="{Binding SmallMapPreview, Mode=OneWay, Converter={StaticResource CacheImageConverter}}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type converters:AsyncTaskTwo}">
                                    <Image Source="{Binding AsyncValue}" Width="60" Height="60"/>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>-->
                <!--<Image Source="{Binding AsyncValue}"
                               DataContext="{Binding SmallMapPreview, Mode=OneWay, Converter={StaticResource CacheImageConverter}}"
                               Width="60" Height="60"/>-->
                <!--<Image Source="{Binding SmallMapPreview, Converter={StaticResource CacheImageConverter}}" Width="60" Height="60"/>-->
                <!--<ContentControl Content="{Binding MapSmallBitmapImage}" Width="60" Height="60"/>-->

                <!--<ContentControl Content="{Binding SmallMapPreview, Converter={StaticResource CacheImageConverter}}"
                                        Width="60" Height="60"
                                        ContentTemplate="{StaticResource Test}"/>-->


                <!--<Button Width="60" Height="60" Margin="-60 0 0 0" Padding="0"
                                Style="{StaticResource MapGeneratorButton}" TextElement.FontSize="10" CommandParameter="{Binding}"/>-->
                <!--<Border Style="{StaticResource CardBorder}" Width="NaN" MaxWidth="180" Padding="4"  VerticalAlignment="Top" Margin="10 0 0 0">
                            <TextBlock Text="{Binding Title, Mode=OneTime}" TextWrapping="Wrap"/>
                        </Border>-->
                <TextBlock  TextWrapping="Wrap" Width="300" Padding="4"  VerticalAlignment="Center" 
                                   Margin="10 0">
                        <Run Text="{Binding Title, Mode=OneWay}"/>
                        <LineBreak/>
                        <Run Text="{Binding Mapname}">
                    <Run.Foreground>
                        <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                    </Run.Foreground>
                        </Run>
                </TextBlock>
                <TextBlock VerticalAlignment="Center" FontSize="16" Width="50" TextAlignment="Center">
                            <Run Text="{Binding NumPlayers, Mode=OneWay}"/>
                            <Run Text="{Binding MaxPlayers, Mode=OneWay, StringFormat='/ {0}'}"/>
                </TextBlock>
                <!--<ContentControl Content="{Binding HostPlayer, Mode=OneWay}" VerticalAlignment="Center" Margin="10 0"
                                        Width="180"/>-->
                <TextBlock>
                            <Run Text="{Binding State, StringFormat='State: {0}', Mode=OneWay}"/>
                </TextBlock>
                <!--<ContentControl Content="{Binding ServerManager}"/>-->
                <!--<TextBlock Text="{Binding Host, Mode=OneWay}" VerticalAlignment="Center" Margin="10 0"/>-->
            </StackPanel>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>