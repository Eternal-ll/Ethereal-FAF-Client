    <Ui:UiPage xmlns:Ui="http://schemas.lepo.co/wpfui/2022/xaml"
           x:Class="Ethereal.FAF.UI.Client.Views.GamesView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:local="clr-namespace:Ethereal.FAF.UI.Client.Views"
           xmlns:lobby="clr-namespace:Ethereal.FAF.UI.Client.Models.Lobby"
              mc:Ignorable="d" 
              d:DesignHeight="450" d:DesignWidth="800"
              Title="GamesView"
           d:DataContext="{d:DesignInstance {x:Type local:GamesView}}">
    <Grid ShowGridLines="False">
        <Grid.Resources>
            <Style TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="Card" TargetType="Border" BasedOn="{StaticResource ClippedBorder}">
                <Setter Property="Background" Value="#323232"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="4"/>
                
            </Style>
            <Style x:Key="CardBorder" TargetType="Border" BasedOn="{StaticResource Card}">
                <Setter Property="Width" Value="340"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#2e2e2e" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SimModsBadge" TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip>
                            <ItemsControl ItemsSource="{Binding SimMods}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <Run Text="{Binding Value, Mode=OneWay}"/>
                                            <LineBreak/>
                                            <Run Text="{Binding Key, Mode=OneWay}" FontSize="10" Foreground="Gray"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SimMods.Count}" Value="0">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <DataTemplate DataType="{x:Type lobby:GamePlayer}">
                <TextBlock Text="{Binding Login}">
                        <!--<Run Text="{Binding Login}"/>-->
                        <!--<Run Text="{Binding Id}" FontSize="12" Foreground="Gray"/>-->
                </TextBlock>
                <!--<StackPanel>
                    <TextBlock Text="{Binding Login}">
                        --><!--<Run Text="{Binding Login}"/>-->
                        <!--<Run Text="{Binding Id}" FontSize="12" Foreground="Gray"/>--><!--
                    </TextBlock>
                </StackPanel>-->
            </DataTemplate>

            <Style x:Key="DefaultMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"></Style>


            <Style x:Key="GamePlayerMenuItem" TargetType="MenuItem">
                <Setter Property="Header" Value="{Binding Login}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>
                <Setter Property="ItemsSource">
                    <Setter.Value>
                        <x:Array Type="FrameworkElement">
                            <MenuItem Header="View profile"/>
                            <Separator/>
                            <MenuItem Header="Analytics">
                                <MenuItem Header="FAF Analytics [Global + TMM]" 
                                                                              Command="{StaticResource FafAnalyticsGlobalCommand}"
                                                                              CommandParameter="{Binding Id}"
                                          ToolTip="FAF Analytics by Kazbek"/>
                                <MenuItem Header="FAF Analytics [1 vs 1]" Command="{StaticResource FafAnalyticsLadderCommand}"
                                                                              CommandParameter="{Binding Id}"/>
                                <MenuItem Header="FAF Analytics [2 vs 2]" Command="{StaticResource FafAnalyticsTMMCommand}"
                                                                              CommandParameter="{Binding Id}"/>
                                <MenuItem Header="FAF Score NL" Command="{StaticResource FafScoreCommand}"
                                                                              CommandParameter="{Binding Login}"/>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Add to friends"/>
                            <MenuItem Header="Add to foe"/>
                        </x:Array>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MapScenarioBadge" TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding MapScenario}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MapGeneratorMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="Command" Value="{StaticResource GenerateGameMapCommand}"/>
                <Setter Property="Header" Value="Generate map"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMapgen}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="1">
                        <Setter Property="Header">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal">
                                    <Ui:ProgressRing Height="12" Width="12" Margin="0 0 4 0" IsIndeterminate="True"/>
                                    <TextBlock Text="Map is generating..."/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="2">
                        <Setter Property="Header" Value="Map is generated"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="3">
                        <Setter Property="Header">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal" TextElement.Foreground="Red">
                                    <Ui:SymbolIcon Symbol="ErrorCircle24"/>
                                    <TextBlock Text="Map generation faulted!"/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="MapGeneratorButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Command" Value="{StaticResource GenerateGameMapCommand}"/>
                <Setter Property="Content" Value="Generate map"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMapgen}" Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="1">
                        <Setter Property="Content">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal">
                                    <Ui:ProgressRing Height="12" Width="12" Margin="0 0 4 0" IsIndeterminate="True"/>
                                    <TextBlock Text="Map is generating..."/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="2">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding MapGeneratorState}" Value="3">
                        <Setter Property="Content">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal" TextElement.Foreground="Red">
                                    <Ui:SymbolIcon Symbol="ErrorCircle24"/>
                                    <TextBlock Text="Map generation faulted!"/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="DefaultCard" DataType="{x:Type lobby:Game}">
                <Border Style="{StaticResource CardBorder}" Cursor="Hand">
                    <Border.ToolTip>
                        <ToolTip>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding State}" Value="1">
                                                <Setter Property="Text" Value="Double click to join"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </ToolTip>
                    </Border.ToolTip>
                    <Border.ContextMenu>
                        <ContextMenu>
                            <MenuItem Style="{StaticResource MapGeneratorMenuItem}" CommandParameter="{Binding}"/>

                            <MenuItem Header="Players" ItemsSource="{Binding GameTeams}">
                                <MenuItem.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding HumanTitle}"/>
                                        <Setter Property="ItemsSource" Value="{Binding Players}"/>
                                        <Setter Property="ItemContainerStyle" Value="{StaticResource GamePlayerMenuItem}"/>
                                    </Style>
                                </MenuItem.ItemContainerStyle>
                            </MenuItem>
                        </ContextMenu>
                    </Border.ContextMenu>
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{DynamicResource JoinGameCommand}" CommandParameter="{Binding}"/>
                    </Border.InputBindings>
                    <Grid ShowGridLines="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="128"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="0" Grid.RowSpan="2" Source="{Binding SmallMapPreview}"
                               ToolTip="{Binding Mapname}" Width="128" Height="128" VerticalAlignment="Top"/>
                        <StackPanel Grid.Column="2">
                            <!--<WrapPanel Margin="-4 0 0 4">-->
                            <TextBlock Grid.Column="2" Margin="4 2 0 0" TextWrapping="Wrap" ToolTip="{Binding Title}">
                                <Run Text="{Binding HumanTitle, Mode=OneWay}"/>
                                <Run Text="by"/>
                                <InlineUIContainer BaselineAlignment="Bottom" FontWeight="DemiBold">
                                    <ContentControl Content="{Binding HostPlayer, Mode=OneWay}">
                                        <ContentControl.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Style="{StaticResource GamePlayerMenuItem}" DataContext="{Binding HostPlayer}"/>
                                            </ContextMenu>
                                        </ContentControl.ContextMenu>
                                    </ContentControl>
                                </InlineUIContainer>
                            </TextBlock>
                                <!--<TextBlock Grid.Column="2" Grid.Row="1" Margin="4 2 0 0" FontWeight="Bold" Text="{Binding Host, StringFormat='by {0}'}"/>-->
                            <!--</WrapPanel>-->
                            <WrapPanel Grid.Row="1" Margin="-4 0 0 0" VerticalAlignment="Top">
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary">
                                    <TextBlock>
                                        <Run Text="{Binding NumPlayers}"/>
                                        <Run Text="/"/>
                                        <Run Text="{Binding MaxPlayers}"/>
                                    </TextBlock>
                                    <Ui:Badge.ToolTip>
                                        <ToolTip>
                                            <StackPanel>
                                                <TextBlock Text="{Binding RatingType, StringFormat='Rating type: {0}'}" Margin="0 0 0 4"/>
                                                <ItemsControl ItemsSource="{Binding GameTeams}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel>
                                                                <TextBlock Text="{Binding HumanTitle}" Margin="0 4 0 4"/>
                                                                <ItemsControl ItemsSource="{Binding Players}"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </StackPanel>
                                        </ToolTip>
                                    </Ui:Badge.ToolTip>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Content="{Binding RatingType}" Appearance="Secondary" ToolTip="Rating type"/>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding RatingMax}" ToolTip="Maxiumum rating rest. to join">
                                    <TextBlock Text="{Binding StringFormat='max: {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding RatingMin}" ToolTip="Minimum rating rest. to join">
                                    <TextBlock Text="{Binding StringFormat='min: {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary">
                                    <Ui:Badge.Style>
                                        <Style TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip>
                                                        <ItemsControl ItemsSource="{Binding SimMods}">
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock>
                                            <Run Text="{Binding Value, Mode=OneWay}"/>
                                            <LineBreak/>
                                            <Run Text="{Binding Key, Mode=OneWay}" FontSize="10" Foreground="Gray"/>
                                                                    </TextBlock>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </ToolTip>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SimMods.Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ui:Badge.Style>
                                    <TextBlock Text="{Binding SimMods.Count,StringFormat='mods: {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding PasswordProtected}" ToolTip="Is password protected">
                                    <Ui:Badge.Style>
                                        <Style TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ui:Badge.Style>
                                    <TextBlock Text="Protected"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding HumanLaunchedAt}">
                                    <TextBlock Text="{Binding StringFormat='launched {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" Style="{StaticResource MapScenarioBadge}" ToolTip="Map size in KM">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}x{1} km">
                                                <Binding Path="MapScenario.WidthInKm" />
                                                <Binding Path="MapScenario.HeigthInKm" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" Style="{StaticResource MapScenarioBadge}" ToolTip="Map name from scenario">
                                    <TextBlock Text="{Binding MapScenario.Name}"/>
                                </Ui:Badge>
                                <Button Style="{StaticResource MapGeneratorButton}" CommandParameter="{Binding}"
                                        Margin="4 4 0 0" Padding="4 0" Height="26" VerticalAlignment="Stretch" FontSize="12"/>
                            </WrapPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="LadderCard" DataType="{x:Type lobby:Game}">
                <Border Style="{StaticResource CardBorder}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="128"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.RowSpan="5" Source="{Binding SmallMapPreview}" ToolTip="{Binding Mapname}" Width="128" Height="128" VerticalAlignment="Top"/>
                        <TextBlock Grid.Column="2" Margin="4 4 0 0" Text="{Binding HumanTitle}" FontSize="12" HorizontalAlignment="Center" FontWeight="Bold" TextWrapping="Wrap" ToolTip="{Binding Title}"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Text="50%" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="32"/>
                        <TextBlock Grid.Column="2" Grid.Row="3" Margin="0 0 4 4" VerticalAlignment="Bottom" HorizontalAlignment="Right" Opacity=".5" Text="{Binding HumanLaunchedAt, StringFormat='launched {0}'}"/>
                    </Grid>
                </Border>
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="#323232" Grid.ColumnSpan="3"/>
        <WrapPanel Margin="10 10 30 10" Grid.ColumnSpan="3">
            <ComboBox Width="100" SelectedItem="{Binding ViewModel.SelectedGameMode}" ItemsSource="{Binding ViewModel.GameModes}" Padding="10 5.5"
                      ToolTip="Game mode"/>
            
            
            <!--<ComboBox Width="100" Margin="10 0 0 0" Padding="10 5.5" SelectedValue="Filter">
                <ComboBoxItem Content="Filter"/>
                <ComboBoxItem Content="Filter"/>
                <ComboBoxItem Content="Filter"/>
                <ComboBoxItem Content="Filter"/>
                <ComboBoxItem Content="Filter"/>
            </ComboBox>-->
            <!--<Grid Width="200" Margin="10 0 0 0">
                <ComboBox Padding="90 5.5 10 5.5">
                    <ComboBoxItem Content="filter"/>
                    <ComboBoxItem Padding="0 0 0 0" Margin="0" Background="Red">
                        <CheckBox Content="Filter" Padding="0" Margin="0"/>
                    </ComboBoxItem>
                    <ComboBoxItem Padding="0 0 0 0">
                        <CheckBox Content="Filter" Padding="0" Margin="0"/>
                    </ComboBoxItem>
                    <ComboBoxItem Padding="0 0 0 0">
                        <CheckBox Content="Filter" Padding="0" Margin="0"/>
                    </ComboBoxItem>
                    <ComboBoxItem Padding="0 0 0 0">
                        <CheckBox Content="Filter" Padding="0" Margin="0"/>
                    </ComboBoxItem>
                </ComboBox>
                <ToggleButton VerticalAlignment="Stretch">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                            <Setter Property="Content" Value="Disabled"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="Enabled"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
            </Grid>-->
            <Button Width="100" Margin="10 0 0 0" 
                    Visibility="{Binding ViewModel.LiveButtonVisibility}" Command="{Binding ViewModel.ChangeLiveButton}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Content" Value="Show live"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsLive}" Value="True">
                                <!--<Setter Property="Background" Value="#ff6e6e"/>-->
                                <!--<Setter Property="Foreground" Value="White"/>-->
                                <Setter Property="Content" Value="Show open"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Content="Host game" Width="100" Margin="10 0 0 0" Visibility="{Binding ViewModel.HostGameButtonVisibility}" Command="{Binding ViewModel.HostGameCommand}"/>

            <ToggleButton Name="PopupToggeButton" Width="100" Content="Filter" Margin="10 0 0 0"/>
            <Popup IsOpen="{Binding IsChecked, ElementName=PopupToggeButton}" StaysOpen="False" AllowsTransparency="True"
                       PlacementTarget="{Binding ElementName=PopupToggeButton}"
                       Placement="Bottom">
                <Border Style="{StaticResource Card}" Padding="10"
                            BorderThickness="1">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource SystemFillColorSolidNeutralBackground}" />
                    </Border.Background>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource SolidBackgroundFillColorBase}" />
                    </Border.BorderBrush>
                    <Border.Effect>
                        <DropShadowEffect
                                BlurRadius="30"
                                Direction="0"
                                Opacity="0.4"
                                ShadowDepth="0"
                                Color="#202020" />
                    </Border.Effect>
                    <StackPanel>
                        <CheckBox Content="Show only lobbies with friends" IsThreeState="True" ToolTip="Will show only friends lobbies if there is any"/>
                        <CheckBox Content="Show only generated maps"/>
                        <CheckBox Content="Show only maps from matchmaking"/>
                        <CheckBox Content="Hide foes lobbies"/>
                        <CheckBox Content="Hide private lobbies"/>
                        <CheckBox/>
                    </StackPanel>
                </Border>
            </Popup>

            <Button Margin="10 0 0 0" MinWidth="100" Visibility="{Binding ViewModel.SearchButtonVisibility}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.MatchmakingViewModel.State}" Value="0">
                                <Setter Property="Command" Value="{Binding ViewModel.MatchmakingViewModel.JoinQueueCommand}"/>
                                <Setter Property="CommandParameter" Value="1"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ViewModel.MatchmakingViewModel.State}" Value="1">
                                <Setter Property="Command" Value="{Binding ViewModel.MatchmakingViewModel.LeaveQueueCommand}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ViewModel.MatchmakingViewModel.State}" Value="2">
                                <Setter Property="Command" Value="{Binding ViewModel.MatchmakingViewModel.LeaveQueueCommand}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <StackPanel Orientation="Horizontal">
                    <Ui:ProgressRing Height="12" Width="12" Margin="0 0 4 0"
                                     IsIndeterminate="{Binding ViewModel.MatchmakingViewModel.IsProgressRingIndeterminate}"
                                     Visibility="{Binding ViewModel.MatchmakingViewModel.ProgressRingVisibility}"/>
                    <TextBlock Text="{Binding ViewModel.MatchmakingViewModel.ProgressText}"/>
                </StackPanel>
            </Button>

            <ContentControl Content="{Binding ViewModel.MatchmakingViewModel.CurrentQueue}">
                <ContentControl.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10 -4 0 -4">
                            <Ui:Badge>
                                <TextBlock Text="{Binding PopTimeSpan, StringFormat='Matching in: {0:mm\\:ss}'}"/>
                            </Ui:Badge>
                            <Ui:Badge>
                                <TextBlock Text="{Binding PlayersCountInQueue, StringFormat='In queue: {0}'}"/>
                            </Ui:Badge>
                        </StackPanel>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>

            <StackPanel Orientation="Horizontal" Visibility="{Binding ViewModel.PartyVisibility}">
                <Border Margin="10 0 0 0" Style="{StaticResource Card}">
                    <Border.Background>
                        <SolidColorBrush Color="#909090" Opacity=".2"/>
                    </Border.Background>
                    <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <Border Style="{StaticResource Card}" Padding="10 2">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Player 1"/>
                                <Ui:SymbolIcon Symbol="PlugDisconnected24" Foreground="Red" Margin="6 0 0 0" ToolTip="Kick from party">
                                    <Ui:SymbolIcon.Style>
                                        <Style TargetType="Ui:SymbolIcon" BasedOn="{StaticResource {x:Type Ui:SymbolIcon}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=IsMouseOver}"
                                                                 Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ui:SymbolIcon.Style>
                                </Ui:SymbolIcon>
                            </StackPanel>
                        </Border>
                    </ItemsControl>
                </Border>
                <Button FontSize="12" Margin="10 0 0 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Invite player"/>
                        <Ui:SymbolIcon Symbol="PersonAdd24" Foreground="LimeGreen" Filled="True" Margin="6 0 0 0"
                                       ToolTip="Invite player to party"/>
                    </StackPanel>
                </Button>
            </StackPanel>

        </WrapPanel>
        <Ui:VirtualizingItemsControl Grid.Row="1" Grid.ColumnSpan="2" Margin="-4 4 0 0" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
            ItemsSource="{Binding ViewModel.GamesView, Mode=OneWay}" IsTabStop="False"
            VirtualizingPanel.CacheLengthUnit="Pixel">
            <Ui:VirtualizingItemsControl.Style>
                <Style TargetType="Ui:VirtualizingItemsControl" BasedOn="{StaticResource {x:Type Ui:VirtualizingItemsControl}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ViewModel.SelectedGameMode}" Value="Ladder 1 vs 1">
                            <Setter Property="ItemTemplate" Value="{StaticResource LadderCard}"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="ItemTemplate" Value="{StaticResource DefaultCard}"/>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <Ui:VirtualizingWrapPanel
                                IsVirtualizing="{TemplateBinding VirtualizingPanel.IsVirtualizing}"
                                Orientation="Vertical"
                                SpacingMode="None"
                                StretchItems="False"
                                VirtualizationMode="{TemplateBinding VirtualizingPanel.VirtualizationMode}" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Ui:VirtualizingItemsControl.Style>
        </Ui:VirtualizingItemsControl>
        <ToggleButton x:Name="SidebarToggleButton" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
            <ToggleButton.ToolTip>
                <ToolTip Placement="Left">
                    <StackPanel>
                        <TextBlock TextWrapping="Wrap">
                            <Run Text="Sidebar expander" FontSize="14"/>
                            <LineBreak/>
                            <Run Text="Expand or collapse additional information about selected lobby"/>
                            <LineBreak/>
                        </TextBlock>
                        <Image Source="/Resources/Images/Examples/SidebarExample.png"/>
                    </StackPanel>
                </ToolTip>
            </ToggleButton.ToolTip>
            <ToggleButton.Style>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                    <Setter Property="TextElement.FontSize" Value="22"/>
                    <Setter Property="Padding" Value="6 1 6 4"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Content" Value='‹'/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SidebarToggleButton, Path=IsChecked}" Value="True">
                            <Setter Property="Grid.ColumnSpan" Value="2"/>
                            <Setter Property="Content" Value="›"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <ScrollViewer x:Name="SidebarScrollViewer" Grid.Column="2" Grid.Row="1">
            <ScrollViewer.Style>
                <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Type ScrollViewer}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=SidebarToggleButton, Path=IsChecked}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="CanContentScroll" Value="False">
                            <Setter Property="Padding" Value="0 0 -16 0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ScrollViewer.Style>
            <Border Style="{StaticResource CardBorder}">
            </Border>
        </ScrollViewer>
    </Grid>
</Ui:UiPage>
