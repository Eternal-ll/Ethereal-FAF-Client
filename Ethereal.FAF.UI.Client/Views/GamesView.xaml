<Ui:UiPage xmlns:Ui="http://schemas.lepo.co/wpfui/2022/xaml"
           x:Class="Ethereal.FAF.UI.Client.Views.GamesView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:local="clr-namespace:Ethereal.FAF.UI.Client.Views"
           xmlns:models="clr-namespace:FAF.Domain.LobbyServer;assembly=FAF.Domain.LobbyServer"
              mc:Ignorable="d" 
              d:DesignHeight="450" d:DesignWidth="800"
              Title="GamesView"
           d:DataContext="{d:DesignInstance {x:Type local:GamesView}}">
    <Grid Margin="18 18 18 0">
        <Grid.Resources>
            <Style TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CardBorder" TargetType="Border" BasedOn="{StaticResource ClippedBorder}">
                <Setter Property="Background" Value="{DynamicResource ControlElevationBorderBrush}"/>
                <Setter Property="Width" Value="350"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="4"/>
            </Style>

            <DataTemplate x:Key="DefaultCard" DataType="{x:Type models:GameInfoMessage}">
                <Border Style="{StaticResource CardBorder}">
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=DataContext.ViewModel.JoinGameCommand}"/>
                    </Border.InputBindings>
                    <Grid ShowGridLines="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="128"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Row="0" Grid.RowSpan="2" Source="{Binding SmallMapPreview}" ToolTip="{Binding Mapname}" Width="128" Height="128" VerticalAlignment="Top"/>
                        <StackPanel Grid.Column="2">
                            <WrapPanel Margin="-4 0 0 4">
                                <TextBlock Grid.Column="2" Margin="4 2 0 0" Text="{Binding HumanTitle}" TextWrapping="Wrap" ToolTip="{Binding Title}"/>
                                <TextBlock Grid.Column="2" Grid.Row="1" Margin="4 2 0 0" FontWeight="Bold" Text="{Binding Host, StringFormat='by {0}'}"/>
                            </WrapPanel>
                            <WrapPanel Grid.Row="1" Margin="-4 0 0 0" VerticalAlignment="Top">
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" ToolTip="Rating type">
                                    <TextBlock>
                                        <Run Text="{Binding NumPlayers}"/>
                                        <Run Text="/"/>
                                        <Run Text="{Binding MaxPlayers}"/>
                                    </TextBlock>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Content="{Binding RatingType}" Appearance="Secondary" ToolTip="Rating type"/>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding RatingMax}" ToolTip="Maxiumum rating rest. to join">
                                    <TextBlock Text="{Binding StringFormat='max: {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding RatingMin}" ToolTip="Minimum rating rest. to join">
                                    <TextBlock Text="{Binding StringFormat='min: {0}'}"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding PasswordProtected}" ToolTip="Is password protected">
                                    <Ui:Badge.Style>
                                        <Style TargetType="Ui:Badge" BasedOn="{StaticResource {x:Type Ui:Badge}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Ui:Badge.Style>
                                    <TextBlock Text="Protected"/>
                                </Ui:Badge>
                                <Ui:Badge Margin="4 4 0 0" Appearance="Secondary" DataContext="{Binding HumanLaunchedAt}">
                                    <TextBlock Text="{Binding StringFormat='launched {0}'}"/>
                                </Ui:Badge>
                            </WrapPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="LadderCard" DataType="{x:Type models:GameInfoMessage}">
                <Border Style="{StaticResource CardBorder}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.RowSpan="5" Source="{Binding SmallMapPreview}" ToolTip="{Binding Mapname}" Width="100" Height="100" VerticalAlignment="Top"/>
                        <TextBlock Grid.Column="2" Margin="4 4 0 0" Text="{Binding HumanTitle}" FontSize="12" HorizontalAlignment="Center" FontWeight="Bold" TextWrapping="Wrap" ToolTip="{Binding Title}"/>
                        <TextBlock Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Text="50%" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="32"/>
                        <TextBlock Grid.Column="2" Grid.Row="3" Margin="0 0 4 4" VerticalAlignment="Bottom" HorizontalAlignment="Right" Opacity=".5" Text="{Binding HumanLaunchedAt, StringFormat='launched {0}'}"/>
                    </Grid>
                </Border>
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <WrapPanel Margin="0 0 0 10">
            <ComboBox SelectedItem="{Binding ViewModel.SelectedGameMode}" ItemsSource="{Binding ViewModel.GameModes}" Padding="10 6"/>
            <Ui:ToggleSwitch Margin="10 0" IsChecked="{Binding ViewModel.IsLive}" IsEnabled="{Binding ViewModel.IsLiveInputEnabled}">
                <Ui:ToggleSwitch.Style>
                    <Style TargetType="Ui:ToggleSwitch" BasedOn="{StaticResource {x:Type Ui:ToggleSwitch}}">
                        <Setter Property="Content" Value="Open games"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="Live games"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Ui:ToggleSwitch.Style>
            </Ui:ToggleSwitch>
            <Button Content="Host game" Visibility="{Binding ViewModel.HostGameButtonVisibility}"/>
        </WrapPanel>
        <Ui:VirtualizingItemsControl Grid.Row="1" Margin="-4 0 -16 0" Foreground="{DynamicResource TextFillColorSecondaryBrush}"
            ItemsSource="{Binding ViewModel.GamesView, Mode=OneWay}" IsTabStop="False"
            VirtualizingPanel.CacheLengthUnit="Pixel">
            <Ui:VirtualizingItemsControl.Style>
                <Style TargetType="Ui:VirtualizingItemsControl" BasedOn="{StaticResource {x:Type Ui:VirtualizingItemsControl}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ViewModel.SelectedGameMode}" Value="Ladder 1 vs 1">
                            <Setter Property="ItemTemplate" Value="{StaticResource LadderCard}"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="ItemTemplate" Value="{StaticResource DefaultCard}"/>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <Ui:VirtualizingWrapPanel
                                IsVirtualizing="{TemplateBinding VirtualizingPanel.IsVirtualizing}"
                                Orientation="Vertical"
                                SpacingMode="None"
                                StretchItems="False"
                                VirtualizationMode="{TemplateBinding VirtualizingPanel.VirtualizationMode}" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Ui:VirtualizingItemsControl.Style>
        </Ui:VirtualizingItemsControl>
    </Grid>
</Ui:UiPage>
